version: 2

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

.dotnet_job: &dotnetjob
  docker:
    - image: ${IMAGE}
  steps:
    - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
    # ToDo: Move into main ci-image(s)
    - run:
        name: Install prerequisites
        command: cd /root && wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && apt-get update && apt-get install -y apt-transport-https && apt-get update && apt-get install -y dotnet-sdk-3.1 && cd -
    - run:
        name: Clone liboqs
        command: .circleci/clone_liboqs.sh # unconditional checkout to test for changes there
    - run:
        name: Build and install liboqs
        command: .circleci/git_no_checkin_in_last_day.sh || .circleci/build_liboqs.sh
    - run:
        name: Build wrapper
        command: dotnet build dotnetOQS/dotnetOQS.csproj /p:Platform=AnyCPU -f netstandard1.2 -c Release -o bin/Release/dotnetOQS-netstandard1.2
    - run:
        name: Build and run test app
        command: scripts/linux_sample_netcoreapp2.1_x64_build.sh && ./bin/Release/dotnetOQSSample-netcoreapp2.1-linux-x64/dotnetOQSSample 

.macosdotnet_job: &macosdotnetjob
    macos:
       xcode: "11.3.0"
    steps:
        - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
        - run:
            name: Install dependencies
            command: |
              .circleci/git_no_checkin_in_last_day.sh || (
              brew update &&
              brew install cmake ninja mono-libgdiplus &&
              curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel LTS > dotnetinstall.log ; cat dotnetinstall.log
              )
        - run:
            name: Clone liboqs
            command: .circleci/clone_liboqs.sh # unconditional checkout to test for changes there
        - run:
            name: Build and install liboqs
            command: .circleci/git_no_checkin_in_last_day.sh || .circleci/build_liboqs.sh
        - run:
            name: Build wrapper
            command: export PATH=~/.dotnet:$PATH && dotnet build dotnetOQS/dotnetOQS.csproj /p:Platform=AnyCPU -f netstandard1.2 -c Release -o bin/Release/dotnetOQS-netstandard1.2
        - run:
            name: Build and run test app
            command: export PATH=~/.dotnet:$PATH && scripts/macos_sample_netcoreapp2.1_x64_build.sh && ./bin/Release/dotnetOQSSample-netcoreapp2.1-osx-x64/dotnetOQSSample 

jobs:
  ubuntu_bionic:
    <<: *dotnetjob
    environment:
      IMAGE: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
  macos:
    <<: *macosdotnetjob


workflows:
  version: 2
  build:
    jobs:
      - ubuntu_bionic
      - macos
